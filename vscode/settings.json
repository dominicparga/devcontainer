{
    //------------------------------------------------------------------------//
    // window settings
    "window.title": "${activeEditorMedium}${separator}${rootName}",
    "window.titleBarStyle": "custom",
    "window.zoomLevel": 0,
    "workbench.editor.showTabs": true,
    "workbench.sideBar.location": "left",
    "workbench.statusBar.visible": true,
    "workbench.iconTheme": "material-icon-theme",
    "workbench.colorTheme": "Dracula", // Nord
    // settings-ui
    "workbench.settings.editor": "json",
    "workbench.settings.useSplitJSON": true,
    "workbench.settings.openDefaultSettings": false,
    // terminal
    "terminal.integrated.scrollback": 100000,
    //------------------------------------------------------------------------//
    // editor settings
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/.history": true,
        "**/.pyc": true
    },
    "explorer.confirmDragAndDrop": false,
    "extensions.ignoreRecommendations": false,
    "editor.cursorSmoothCaretAnimation": true,
    "editor.lineNumbers": "relative",
    "editor.rulers": [
        80,
        100,
        120
    ],
    "editor.cursorSurroundingLines": 0,
    "editor.cursorStyle": "line",
    "editor.renderLineHighlight": "none",
    "editor.renderFinalNewline": true,
    "editor.formatOnSave": false,
    "editor.tokenColorCustomizations": true,
    // whitespaces
    "editor.renderWhitespace": "none",
    "files.trimTrailingWhitespace": false, // some files need false!
    // tabs
    "editor.insertSpaces": true,
    "editor.tabSize": 4,
    "editor.detectIndentation": false,
    // line wrapping
    "editor.wordWrap": "off",
    // minimap
    "editor.minimap.enabled": true,
    "editor.minimap.maxColumn": 120,
    // utility
    "files.autoSave": "onFocusChange",
    "files.autoSaveDelay": 1000,
    "editor.suggestSelection": "first",
    // DO NOT SET MANUALLY
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    // font settings
    // - Cascadia Code is from Microsoft, easily installed (< 1 min) via GitHub
    //   GitHub-Link: https://github.com/microsoft/cascadia-code/releases
    // - Menlo is macOS
    // - Courier and monospace are thinner and just fallbacks for the other two
    //
    // - all fonts are monospace-fonts
    // - Cascadia Code and Menlo have * in the line's center
    //   e.g. 3*4, /* comment */, x *= 4, * item in markdown
    "editor.fontFamily": "Cascadia Code, Menlo, Courier, monospace",
    // replaces (only visually!) common chars, e.g. >=
    // - safe when searching >, =, >=
    // - keep width of original chars (2 for >=)
    // - shows original char under block-cursor
    "editor.fontLigatures": true,
    "editor.fontSize": 14,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    "editor.useTabStops": false,
    //------------------------------------------------------------------------//
    // brackets
    "editor.matchBrackets": "never",
    "bracket-pair-colorizer-2.forceUniqueOpeningColor": false,
    "bracket-pair-colorizer-2.forceIterationColorCycle": false,
    "bracket-pair-colorizer-2.colorMode": "Consecutive",
    "bracket-pair-colorizer-2.highlightActiveScope": true,
    "bracket-pair-colorizer-2.activeScopeCSS": [
        "borderStyle : solid",
        "borderWidth : 1px",
        "borderColor : {color}",
        "opacity     : 1.00"
    ],
    "bracket-pair-colorizer-2.showBracketsInGutter": true,
    "bracket-pair-colorizer-2.showBracketsInRuler": false,
    "bracket-pair-colorizer-2.showVerticalScopeLine": false,
    "bracket-pair-colorizer-2.showHorizontalScopeLine": false,
    //------------------------------------------------------------------------//
    // privacy
    "telemetry.enableTelemetry": false,
    "telemetry.enableCrashReporter": true,
    //------------------------------------------------------------------------//
    // specific stuff
    "files.associations": {
        "SConscript": "python",
        "SConstruct": "python",
        "TAG_EDITMSG": "git-commit",
        ".latexmkrc": "perl",
        "config": "properties",
        "config.general": "properties",
        "*.fmi": "properties" // github.com/dominicparga/osmgraphing
        // "*.thor": "ruby",
        // "*.jsx": "javascript",
    },
    //------------------------------------------------------------------------//
    // cpp
    "[cpp]": {
        "editor.rulers": [ 100 ]
    },
    //------------------------------------------------------------------------//
    // css
    "[css]": {
        "editor.rulers": [ 80 ],
        "editor.tabSize": 2
    },
    //------------------------------------------------------------------------//
    // git
    "scm.defaultViewMode": "tree",
    "[git-commit]": {
        "editor.rulers": [ 50, 72 ]
    },
    //------------------------------------------------------------------------//
    // html
    "[html]": {
        "editor.rulers": [ 80 ],
        "editor.tabSize": 2
    },
    //------------------------------------------------------------------------//
    // java
    "[java]": {
        "editor.rulers": [ 100 ]
    },
    "java.configuration.checkProjectSettingsExclusions": false,
    //------------------------------------------------------------------------//
    // LaTeX
    "[latex]": {
        "editor.wordWrap": "on"
    },
    "latex-workshop.view.pdf.viewer": "tab",
    "latex-workshop.hover.preview.scale": 1,
    "latex-workshop.latex.external.build.command": "latexmk",
    // // relative to main.tex
    // "latex-workshop.latex.outDir": "build",
    // "latex-workshop.latex.magic.args": [
    //     "-lualatex",
    //     "-shell-escape",
    //     "-file-line-error",
    //     "-halt-on-error",
    //     "-interaction=nonstopmode",
    //     "-output-dir=%OUTDIR%",
    //     "-synctex=1",
    //     "%DOC%"
    // ],
    // "latex-workshop.latex.magic.bib.args": [
    //     "%DOCFILE%",
    //     "--input-directory=%OUTDIR%",
    //     "--output-directory=%OUTDIR%"
    // ],
    //------------------------------------------------------------------------//
    // Markdown
    "[markdown]": {
        "editor.wordWrap": "on",
        "editor.quickSuggestions": true,
        "editor.tabSize": 2
    },
    "markdownlint.config": {
        "MD012": false, // no multiple blanks
        "MD013": false, // line length
        "MD024": false, // no duplicate heading/header
        "MD033": false, // no inline-html
        "MD041": false, // first line should be '# h1'
        "MD046": false // code-block-style
    },
    //------------------------------------------------------------------------//
    // python
    "[python]": {
        "editor.rulers": [ 72, 79 ],
        "editor.trimAutoWhitespace": true
    },
    "python.autoComplete.addBrackets": true,
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": true,
    "python.linting.pylintArgs": [
        "--max-line-length=79"
    ],
    "python.venvFolders": [
        "envs",
        ".pyenv",
        ".direnv",
        ".venv"
    ],
    "python.jediEnabled": false,
    //------------------------------------------------------------------------//
    // rust
    "[rust]": {
        "editor.wordWrap": "on",
        "editor.rulers": [ 100 ],
        "editor.trimAutoWhitespace": true
    },
    "rust-analyzer.inlayHints.chainingHints": false,
    "rust-analyzer.inlayHints.parameterHints": false,
    "rust-analyzer.inlayHints.typeHints": false,
    "rust-analyzer.cargo.allFeatures": true,
    "rust-analyzer.cargo.features": [ "gpl" ],
    "rust-analyzer.updates.askBeforeDownload": true,
    //------------------------------------------------------------------------//
    // shellscript
    // SC1090 - Can't follow non-constant source.
    // SC1091 - Not following
    // SC2016 - ${...} doesn't expand in '...', use "..."
    // SC2139 - Expansion when defined, not when used.
    "[shellscript]": {
        "editor.rulers": [ 80 ],
        "editor.trimAutoWhitespace": true
    },
    "shellcheck.enable": true,
    "shellcheck.run": "onType",
    "shellcheck.executablePath": "shellcheck",
    "shellcheck.exclude": ["SC1090", "SC1091", "SC2016", "SC2139"],
    "shellcheck.customArgs": [],
    "shellcheck.ignorePatterns": {},
    "shellcheck.useWSL": false,
    //------------------------------------------------------------------------//
    // typescript
    "[typescript]": {
        "editor.rulers": [ 80 ],
        "editor.tabSize": 2
    },
    "[typescriptreact]": {
        "editor.rulers": [ 80 ],
        "editor.tabSize": 2
    },
    //------------------------------------------------------------------------//
    // yaml
    //------------------------------------------------------------------------//
    // vim
    "vim.leader": ",",
    "vim.useSystemClipboard": true,
    "vim.scroll": 20,
    // moving cursor over folded text without entering it
    "vim.foldfix": true,
    // search
    "vim.hlsearch": true,
    "vim.smartcase": true,
    // easymotion
    "vim.easymotion": true,
    "vim.easymotionMarkerFontFamily": "Cascadia Code, Menlo, Courier, monospace",
    "vim.easymotionMarkerFontSize": "16",
    "vim.easymotionMarkerWidthPerChar": 10,
    "vim.easymotionMarkerHeight": 22,
    // keybindings
    "vim.changeWordIncludesWhitespace": true,
    "vim.visualModeKeyBindingsNonRecursive": [
        //--------------------------------------------------------------------//
        // utils
        {
            "before": ["<leader>", "p"], // dont forget normal-mode
            "commands": [
                "workbench.action.quickOpen"
            ]
        },
        {
            "before": ["<leader>", "P"], // dont forget normal-mode
            "commands": [
                "workbench.action.showCommands"
            ]
        },
        {
            "before": ["<leader>", "e"], // dont forget normal-mode
            "commands": [
                "workbench.action.toggleSidebarVisibility"
            ]
        },
        //--------------------------------------------------------------------//
        // code interaction
        {
            "before": ["<leader>", "U"], // dont forget normal-mode
            "commands": [
                "editor.action.transformToUppercase"
            ]
        },
        {
            "before": ["<leader>", "u"], // dont forget normal-mode
            "commands": [
                "editor.action.transformToLowercase"
            ]
        },
        {
            "before": ["<leader>", "/"], // dont forget normal-mode
            "commands": [
                "editor.action.commentLine"
            ]
        },
        {
            "before": [">"], // dont forget normal-mode
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": ["<"], // dont forget normal-mode
            "commands": [
                "editor.action.outdentLines"
            ]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        //--------------------------------------------------------------------//
        // utils
        {
            "before": ["<leader>", "p"], // dont forget visual-mode
            "commands": [
                "workbench.action.quickOpen"
            ]
        },
        {
            "before": ["<leader>", "P"], // dont forget visual-mode
            "commands": [
                "workbench.action.showCommands"
            ]
        },
        {
            "before": ["<leader>", "c", "j"],
            "commands": [
                "editor.action.insertCursorBelow"
            ]
        },
        {
            "before": ["<leader>", "c", "k"],
            "commands": [
                "editor.action.insertCursorAbove"
            ]
        },
        {
            "before": ["<leader>", "e"], // dont forget visual-mode
            "commands": [
                "workbench.action.toggleSidebarVisibility"
            ]
        },
        //--------------------------------------------------------------------//
        // code navigation
        {
            "before": ["<leader>", "b"],
            "commands": [
                "workbench.action.navigateBack"
            ]
        },
        {
            "before": ["<leader>", "f"],
            "commands": [
                "workbench.action.navigateForward"
            ]
        },
        {
            "before": ["<leader>", "#"],
            "commands": [
                "editor.action.goToDeclaration"
            ]
        },
        //--------------------------------------------------------------------//
        // code interaction
        {
            "before": ["<leader>", "U"], // dont forget visual-mode
            "commands": [
                "editor.action.transformToUppercase"
            ]
        },
        {
            "before": ["<leader>", "u"], // dont forget visual-mode
            "commands": [
                "editor.action.transformToLowercase"
            ]
        },
        {
            "before": ["<leader>", "/"], // dont forget visual-mode
            "commands": [
                "editor.action.commentLine"
            ]
        },
        {
            "before": [">"], // dont forget visual-mode
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": ["<"], // dont forget visual-mode
            "commands": [
                "editor.action.outdentLines"
            ]
        },
        //--------------------------------------------------------------------//
        // tab splitting
        {
            "before": ["<leader>", "s", "h"],
            "commands": [
                "workbench.action.splitEditorLeft"
            ]
        },
        {
            "before": ["<leader>", "s", "j"],
            "commands": [
                "workbench.action.splitEditorDown"
            ]
        },
        {
            "before": ["<leader>", "s", "k"],
            "commands": [
                "workbench.action.splitEditorUp"
            ]
        },
        {
            "before": ["<leader>", "s", "l"],
            "commands": [
                "workbench.action.splitEditorRight"
            ]
        },
        //--------------------------------------------------------------------//
        // tab moving
        {
            "before": ["<leader>", "m", "h"],
            "commands": [
                "workbench.action.moveEditorToLeftGroup"
            ]
        },
        {
            "before": ["<leader>", "m", "j"],
            "commands": [
                "workbench.action.moveEditorToBelowGroup"
            ]
        },
        {
            "before": ["<leader>", "m", "k"],
            "commands": [
                "workbench.action.moveEditorToAboveGroup"
            ]
        },
        {
            "before": ["<leader>", "m", "l"],
            "commands": [
                "workbench.action.moveEditorToRightGroup"
            ]
        },
        //--------------------------------------------------------------------//
        // group navigation
        {
            "before": ["<leader>", "w", "h"],
            "commands": [
                "workbench.action.navigateLeft"
            ]
        },
        {
            "before": ["<leader>", "w", "j"],
            "commands": [
                "workbench.action.navigateDown"
            ]
        },
        {
            "before": ["<leader>", "w", "k"],
            "commands": [
                "workbench.action.navigateUp"
            ]
        },
        {
            "before": ["<leader>", "w", "l"],
            "commands": [
                "workbench.action.navigateRight"
            ]
        },
        //--------------------------------------------------------------------//
        // tab navigation
        {
            "before": ["<leader>", "t", "h"],
            "commands": [
                "workbench.action.previousEditorInGroup"
            ]
        },
        {
            "before": ["<leader>", "t", "j"],
            "commands": [
                "workbench.action.previousEditorInGroup"
            ]
        },
        {
            "before": ["<leader>", "t", "k"],
            "commands": [
                "workbench.action.nextEditorInGroup"
            ]
        },
        {
            "before": ["<leader>", "t", "l"],
            "commands": [
                "workbench.action.nextEditorInGroup"
            ]
        },
        // tab access via number
        {
            "before": ["<leader>", "t", "1"],
            "commands": [
                "workbench.action.openEditorAtIndex1"
            ]
        },
        {
            "before": ["<leader>", "t", "2"],
            "commands": [
                "workbench.action.openEditorAtIndex2"
            ]
        },
        {
            "before": ["<leader>", "t", "3"],
            "commands": [
                "workbench.action.openEditorAtIndex3"
            ]
        },
        {
            "before": ["<leader>", "t", "4"],
            "commands": [
                "workbench.action.openEditorAtIndex4"
            ]
        },
        {
            "before": ["<leader>", "t", "5"],
            "commands": [
                "workbench.action.openEditorAtIndex5"
            ]
        },
        {
            "before": ["<leader>", "t", "6"],
            "commands": [
                "workbench.action.openEditorAtIndex6"
            ]
        },
        {
            "before": ["<leader>", "t", "7"],
            "commands": [
                "workbench.action.openEditorAtIndex7"
            ]
        },
        {
            "before": ["<leader>", "t", "8"],
            "commands": [
                "workbench.action.openEditorAtIndex8"
            ]
        },
        {
            "before": ["<leader>", "t", "9"],
            "commands": [
                "workbench.action.openEditorAtIndex9"
            ]
        }
    ],
    //------------------------------------------------------------------------//
    // kutgw
    // cquery
    "cquery.launch.command": "cquery",
    // TODOs
    "todohighlight.defaultStyle": {
        "color": "#5E71A4",
        "backgroundColor": "#282A36",
        "overviewRulerColor": "#000000",
        "border": "1px solid #5E71A4",
        "borderRadius": "2px",
        "isWholeLine": false
    },
    "todohighlight.keywords": [
        {
            "text": "TODO:",
            "color": "#5E71A4",
            "backgroundColor": "#282A36",
            "overviewRulerColor": "#000000",
            "border": "1px solid #5E71A4",
            "borderRadius": "2px",
            "isWholeLine": false
        },
        {
            "text": "FIXME:",
            "color": "#5E71A4",
            "backgroundColor": "#282A36",
            "overviewRulerColor": "#000000",
            "border": "1px solid #5E71A4",
            "borderRadius": "2px",
            "isWholeLine": false
        },
        "HINT:",
        "INFO:",
        "WARN:",
        "ERROR:",
        "ERR:"
    ],
    //------------------------------------------------------------------------//
    // Athena
    "python.linting.flake8Args": [
        "--config ${ATHENA_ROOT}/src/.flake8"
    ],
    "files.associations": {
        "SConstruct": "python"
    },
    //------------------------------------------------------------------------//
    // Git
    "git.autofetch": true,
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "gitlens.views.fileHistory.enabled": true,
    "gitlens.views.lineHistory.enabled": true,
    "gitlens.historyExplorer.enabled": true,
    "gitlens.advanced.messages": {
        "suppressLineUncommittedWarning": true,
        "suppressShowKeyBindingsNotice": true
    },
    //------------------------------------------------------------------------//
    // occasionally added stuff
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/.history": true
    },
    "python.testing.pytestEnabled": true,
    "python.autoComplete.extraPaths": [
        "${env:ATHENA_ROOT}/devel/lib",
        "${env:ATHENA_ROOT}/install/lib",
        "${env:ATHENA_ROOT}/install/lib/python2.7/dist-packages",
        "${env:ATHENA_ROOT}/install/lib/python3/dist-packages",
        "${env:ATHENA_ROOT}/src/tools/dol/executer"
    ],
    "cpplint.cpplintPath": "/lhome/franzef/.local/bin/cpplint",
    "cSpell.language": "en",
    "cSpell.userWords": [
        "atedol",
        "chrono",
        "hanf",
        "pydol",
        "roudi"
    ],
    "C_Cpp.updateChannel": "Insiders",
    "python.languageServer": "Microsoft",
    "python.defaultInterpreterPath": "${env:PYTHON_INTERPRETER_PATH}",
    "terminal.integrated.shell.linux": "/bin/zsh",
    "diffEditor.ignoreTrimWhitespace": false,
    "cmake.configureOnOpen": false,
}
